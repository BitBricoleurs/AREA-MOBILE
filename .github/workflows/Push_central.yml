name: Push to Central Repository

on:
  push:
    branches:
      - dev

jobs:
  sync-to-central-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Setup Git User
        run: |
          git config --global user.name "Bartoszkk"
          git config --global user.email "Bartosz.michalak@epitech.eu"

      - name: Prepare Local Repository
        run: |
          # Clean up the working directory
          git clean -fdx
          # Generate a unique temporary branch name
          UNIQUE_BRANCH="temp-branch-$(date +%s)"
          git checkout -b $UNIQUE_BRANCH

      - name: Copy repository and remove workflows
        run: |
          # Create and prepare the temp-repo directory
          mkdir temp-repo
          shopt -s extglob
          cp -r !(temp-repo) temp-repo/
          rm -rf temp-repo/.github/workflows

      - name: Stash Untracked Files
        run: |
          git stash --include-untracked
          git stash list # Optional, to confirm that files have been stashed

      - name: Sync to Central Repository
        env:
          CENTRAL_REPO: 'git@github.com:EpitechPromo2026/B-DEV-500-TLS-5-2-area-alexandre.lagasse.git'
          UNIQUE_BRANCH: ${{ steps.prepare-local-repository.outputs.UNIQUE_BRANCH }}
        run: |
          git remote add central "${CENTRAL_REPO}"
          git fetch central
          git checkout -b central-main central/main
          git checkout $UNIQUE_BRANCH

          # Define target directory based on repository or other unique identifier
          TARGET_DIR="AREA-MOBILE"

          # Check if TARGET_DIR exists before removing it
          if [ -d "$TARGET_DIR/" ]; then
            git rm -rf $TARGET_DIR/
            git commit -m "Remove existing $TARGET_DIR"
          fi

          # Ensure temp-repo exists before copying
          if [ -d "temp-repo/" ]; then
            cp -r temp-repo/ $TARGET_DIR/
            git add $TARGET_DIR
            git commit -m "Update $TARGET_DIR content"
            # Only use subtree add if TARGET_DIR is not already in the repository
            if ! git log --oneline | grep -q "git-subtree-dir: $TARGET_DIR "; then
              git subtree add --prefix=$TARGET_DIR $UNIQUE_BRANCH
            fi
            git push central HEAD:main
          else
            echo "temp-repo/ does not exist, skipping copy"
          fi
