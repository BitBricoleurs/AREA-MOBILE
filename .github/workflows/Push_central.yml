name: Push to Central Repository

on:
  push:
    branches:
      - dev

jobs:
  sync-to-central-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Setup Git User
        run: |
          git config --global user.name "Bartoszkk"
          git config --global user.email "Bartosz.michalak@epitech.eu"

      - name: Prepare Local Repository
        run: |
          # Clean up the working directory
          git clean -fdx
          # Create a new branch for the temporary work
          git checkout -b temp-branch1

      - name: Create and prepare the temp-repo directory
        run: |
          # Create and prepare the temp-repo directory
          mkdir temp-repo1
          shopt -s extglob
          cp -r !(temp-repo1) temp-repo1/
          rm -rf temp-repo1/.github/workflows

      - name: Upload temp-repo1 as artifact
        uses: actions/upload-artifact@v2
        with:
          name: temp-repo1
          path: temp-repo1/

      - name: Stash Untracked Files
        run: |
          git stash --include-untracked
          git stash list # Optional, to confirm that files have been stashed

      - name: Sync to Central Repository
        env:
          CENTRAL_REPO: 'git@github.com:EpitechPromo2026/B-DEV-500-TLS-5-2-area-alexandre.lagasse.git'
        run: |
          git remote add central "${CENTRAL_REPO}"
          git fetch central
          git checkout -b central-main central/main
          git checkout temp-branch1

          # Download temp-repo1 artifact
          - name: Download temp-repo1
            uses: actions/download-artifact@v2
            with:
              name: temp-repo1

          # Check existence of temp-repo1 before copying
          echo "Checking existence of temp-repo1 directory:"
          if [ -d "temp-repo1/" ]; then
            echo "temp-repo1 exists. Proceeding with copy."
            cp -r temp-repo1/ AREA-MOBILE/
            git add AREA-MOBILE
            git commit -m "Update AREA-MOBILE content"
            # Add the subtree only if AREA-MOBILE doesn't exist in the history
            if ! git log --oneline | grep -q "git-subtree-dir: AREA-MOBILE "; then
              git subtree add --prefix=AREA-MOBILE temp-branch1
            fi
            git push central HEAD:main
          else
            echo "temp-repo1/ does not exist, skipping copy"
